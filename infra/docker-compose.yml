services:

  db:
    image: postgres:14
    container_name: foodgram-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    container_name: foodgram-backend
    build: ../backend
    command: >
      sh -c "until pg_isready -h db -p 5432; do sleep 1; done &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram_backend.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ../backend/media:/app/media
      - ../backend/static:/app/static
    # ports:
    #   - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DB_ENGINE: django.db.backends.postgresql
      POSTGRES_DB: foodgram
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_password
      DB_HOST: db
      DB_PORT: 5432

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ../backend/media:/var/www/media:ro
      - ../backend/static:/var/www/static:ro 
volumes:
  postgres_data:
